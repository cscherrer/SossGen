[![Build Status](https://travis-ci.com/cscherrer/SossGen.jl.svg?branch=master)](https://travis-ci.com/cscherrer/SossGen.jl)
[![Codecov](https://codecov.io/gh/cscherrer/SossGen.jl/branch/master/graph/badge.svg)](https://codecov.io/gh/cscherrer/SossGen.jl)

```julia
using Revise, SossGen
import Gen
```

```julia
m = @model σ begin
    μ ~ Normal()
    y ~ Normal(μ, σ) |> iid(100000)
end;
```

```julia
args = (σ=1.1,);

truth = rand(m(args));
pairs(truth)
```

```julia
g1 = SossGenerativeFunction(m);
g2 = SossGenerativeFunction(m,codegen);
```

```julia
# tr = simulate(g, (args,)) # generate a full trace

tr1, w1 = generate(g1, (args,), choicemap(:y => truth.y)); # generate a trace with y = 3
tr2, w2 = generate(g2, (args,), choicemap(:y => truth.y)); # generate a trace with y = 3
```

```julia
@gen (static) function q(current, args)
    @trace(normal(current[:μ], 0.2), :μ)
end

Gen.load_generated_functions();
```

```julia
using BenchmarkTools
@btime mh($tr1, $q, $(args,));
@btime mh($tr2, $q, $(args,));
```
